<?xml version="1.0"?>
<db:partintro xmlns:db="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:strings="http://exslt.org/strings">
<db:para>Now that we have taken a comprehensive look at the structured writing algorithms it is time to look at structures.</db:para>
<db:para>As we have seen as we have gone through the various structured writing algorithms, each algorithm requires content to be structured in a particular way in order for the algorithm to work correctly.</db:para>
<db:para>However, the other role of structure is to actually represent the content of the writing in a way that is true to, or at least consistent with, its rhetorical design: what it says, how it says it, and why. Structures that are designed solely to serve the needs of algorithm can end up harming the rhetoric of content, and thus ruining the quality that was suppose to be the objective of the algorithm design in the first place.</db:para>
<db:para>But there is more still to structure. The heart of content quality lies in rhetoric, the art of saying the right thing in the right way to achieve a given end. Rhetorical decisions are an important part of any content system and like every other decision, they should be made by the person or group with the time, resources, and skills to make them best, and they should be made a repeatable as possible, since without repeatability you cannot successfully text a rhetorical design or ensure that it is followed when new content is created.</db:para>
<db:para>Algorithms, therefore, must ultimately be the servants of rhetorical goals. This section on structures will begin, therefore, by looking at rhetorical structures and how they can be captured and made repeatable through structured writing. It will then proceed to delve down into the various smaller structured that typically go into the design of a markup language, and look at specific issue and potential solutions that arise in each, looking once again at how the approaches of the different domain are different, and the difference that makes to quality and usability.</db:para>
</db:partintro>
