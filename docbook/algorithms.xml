<?xml version="1.0"?>
<db:partintro xmlns:db="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:strings="http://exslt.org/strings">

<db:para>Most books on structured writing begin by describing structures: the various ways you can partition documents. Only later do they talk about algorithms: the way you process documents.</db:para>
<db:para>I think this is the wrong way to look at the problem. We structure documents for two main reasons:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>To govern rhetoric, what we say and how we say it</db:para>
</db:listitem>
<db:listitem>
<db:para>To enable us to process documents with algorithms</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Structures are merely enablers. Until we know what rhetoric we want to govern and what algorithms we want to run, there is no point is talking about structure. Therefore, this book begins with algorithms, in this part, and continues with rhetoric, at the beginning of the next part. After that, I discuss structure.</db:para>
<db:para>This part begins with two chapters that discuss quality and writing, then discusses specific algorithms, which fall into nine broad categories:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Single sourcing and reuse</db:para>
</db:listitem>
<db:listitem>
<db:para>Linking</db:para>
</db:listitem>
<db:listitem>
<db:para>Conformance and auditing</db:para>
</db:listitem>
<db:listitem>
<db:para>Locating content</db:para>
</db:listitem>
<db:listitem>
<db:para>Generating content</db:para>
</db:listitem>
<db:listitem>
<db:para>Information architecture</db:para>
</db:listitem>
<db:listitem>
<db:para>Managing content</db:para>
</db:listitem>
<db:listitem>
<db:para>Publishing</db:para>
</db:listitem>
<db:listitem>
<db:para>Translation</db:para>
</db:listitem>
</db:itemizedlist>
</db:partintro>
