<?xml version="1.0"?>
<db:preface xmlns:db="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:strings="http://exslt.org/strings" version="5.0" xml:id="preface">
<db:title>Preface</db:title>
<db:para>If you use a computer to create content, you are doing structured writing. The term “structured writing” is often used to refer to a certain class of tools, but all writing tools impose some form of structure on content. Those tools that call themselves “structured writing” tools should actually say that they are more structured or differently structured than mainstream tools such as word processors and desktop publishing tools.</db:para>
<db:para>In fact, if you write content at all, you do structured writing, in the rhetorical sense of the word. Writing that had no rhetorical structure would be meaningless. Certain writing methodologies refer to themselves as “structured writing”, but what they should really be saying is, more structured or differently structured.</db:para>
<db:para>These differently structured writing methodologies are often supported by differently structured software tools. This often leads the marketers of these methods and tools to suggest that their particular methodology or tool is the very essence and definition of structured writing.</db:para>
<db:para>In turn, this often leads people who see no virtue in these particular methods or tools, or who have had an unsatisfactory experience with them, to conclude that structured writing is bunk, or at very least that it is not for them, for their content, or for their company.</db:para>
<db:para>The truth is, it’s all structured writing. There are many ways to structure both the rhetoric and the process of creating content, and one of these may be vastly more productive for you and your organization than what you are doing now.</db:para>
<db:para>The purpose of this book is to present structured writing as a whole, to take a step back from the specific structures of individual tools and systems, and show that all structured writing approaches share a few basic principles and operations. Understanding those principles and operations will help you choose the structured writing approach that is optimal for your content and your organization.</db:para>
<db:para>Whether you are considering a move to a differently structured writing system, or trying to figure out why the one you have already implemented is not working as well as you hoped, this book will help you figure out how structured writing works, what is possible, and what is not possible, and how to figure out which techniques, structures, processes, and tools are going to work best for you.</db:para>
<db:para>In the age of the Web, organizations are producing and delivering ever more content on ever shorter deadlines. To keep up and maintain quality, they need tools and techniques that support rapid and reliable delivery of consistent high quality rhetoric. Many organizations are turning to structured writing solutions (that is <db:emphasis>differently</db:emphasis> structure solutions) to keep up and meet demand, but without a clear and comprehensive understanding of what is possible, they often choose solutions that are sub-optimal, or even worse than what they were doing before.</db:para>
<db:para>I have been in the structured writing industry for nearly 25 years. In that time I have worked with and designed structured writing systems that improved both process and rhetoric. I have also built tools and systems myself (some of which I will talk about in this book), because I have often felt that existing approaches did not do enough to balance the demands of process and rhetoric, or to fully exploit the capacity of structured writing to promote both.</db:para>
<db:para>One of the things I have learned over my career is just how much our minds tend to follow the ruts laid down by our familiar tools and processes. I can’t count the number of requirements documents I have read over the years that insisted that any new system must work exactly like the old system in almost every particular. I don’t believe this is so much a reluctance to change as simply a difficulty imagining how things can be done differently. Making sure that a new system does everything you need doing often means specifying that it does everything the way you are doing it now.</db:para>
<db:para>Every tool we use encapsulates a methodology, a set of choices about how a problem should be partitioned and addressed. If we learn a job using one tool, we tend to learn the partitioning and methodology of that tool as if it were the partitioning and methodology of the craft itself. Thus individual tools create ruts in the mind, constraining our ideas about how things are done.</db:para>
<db:para>By separating the basic principle and practices of structured writing from the implementations of particular tools, this book seeks to get your mind out of the ruts created by whatever tool you are using now so that you can see how the things you want to achieve can be accomplished using these basic principles and practices before you go about selecting or building a tool set to implement those principles and practices in your organization.</db:para>
<db:para>It has been my particular privilege and opportunity to work some of those rare people whose minds seem to be immune to such ruts, and who were able to jog me out of my own ruts, to help me see how different approaches could be both simpler and more effective. To name a dozen would be to neglect a score, but one name in particular deserves mention: Sam Wilmott, principal architect of the OmniMark programming language and all round markup language savant. Sam taught me to see the relationship of text and algorithms in a fundamentally new light and everything I have done in my career leading up to the writing of this book has been working out the implications of what I learned from Sam. The SAM markup language I use for most of the examples in this book is an homage to Sam, and not just in its name.</db:para>
</db:preface>
