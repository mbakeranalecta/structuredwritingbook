<?xml version="1.0" encoding="UTF-8"?>
<chapter name="chapter.quality">
<title>Quality in Structured Writing</title>
<annotations>
<p>Concepts</p>
<p><phrase><annotation type="concept">abstract language</annotation></phrase> <phrase><annotation type="concept">adaptive content</annotation></phrase> <phrase><annotation type="concept" specifically="algorithm">algorithms</annotation></phrase> <phrase><annotation type="concept">algorithm</annotation></phrase> <phrase><annotation type="concept">annotations</annotation></phrase> <phrase><annotation type="concept">annotation</annotation></phrase> <phrase><annotation type="concept">bottom-up information architecture</annotation></phrase> <phrase><annotation type="concept">categories</annotation></phrase> <phrase><annotation type="concept">categorization</annotation></phrase> <phrase><annotation type="concept">classification</annotation></phrase> <phrase><annotation type="concept">consistency</annotation></phrase> <phrase><annotation type="concept">constraints</annotation></phrase> <phrase><annotation type="concept">content silos</annotation></phrase> <phrase><annotation type="concept">content strategy</annotation></phrase> <phrase><annotation type="concept">coverage</annotation></phrase> <phrase><annotation type="concept">document domain</annotation></phrase> <phrase><annotation type="concept">document type</annotation></phrase> <phrase><annotation type="concept">document-domain</annotation></phrase> <phrase><annotation type="concept">electronic media</annotation></phrase> <phrase><annotation type="concept">Every Page is Page One</annotation></phrase> <phrase><annotation type="concept">extensibility</annotation></phrase> <phrase><annotation type="concept">faceted navigation</annotation></phrase> <phrase><annotation type="concept">feeds</annotation></phrase> <phrase><annotation type="concept">findability</annotation></phrase> <phrase><annotation type="concept">frameworks</annotation></phrase> <phrase><annotation type="concept">functional lucidity</annotation></phrase> <phrase><annotation type="concept">functionally lucid</annotation></phrase> <phrase><annotation type="concept">future proofing</annotation></phrase> <phrase><annotation type="concept">future proof</annotation></phrase> <phrase><annotation type="concept">guidance</annotation></phrase> <phrase><annotation type="concept">hierarchical structure</annotation></phrase> <phrase><annotation type="concept">hybrid markup language</annotation></phrase> <phrase><annotation type="concept">information architecture</annotation></phrase> <phrase><annotation type="concept">information design</annotation></phrase> <phrase><annotation type="concept">information foraging</annotation></phrase> <phrase><annotation type="concept">information mapping</annotation></phrase> <phrase><annotation type="concept">information typing</annotation></phrase> <phrase><annotation type="concept">interactive media</annotation></phrase> <phrase><annotation type="concept">management domain</annotation></phrase> <phrase><annotation type="concept">management-domain</annotation></phrase> <phrase><annotation type="concept">media domain</annotation></phrase> <phrase><annotation type="concept">media-domain</annotation></phrase> <phrase><annotation type="concept">metadata</annotation></phrase> <phrase><annotation type="concept">navigation</annotation></phrase> <phrase><annotation type="concept">normalization</annotation></phrase> <phrase><annotation type="concept">personalized content</annotation></phrase> <phrase><annotation type="concept">progressive disclosure</annotation></phrase> <phrase><annotation type="concept">referential integrity</annotation></phrase> <phrase><annotation type="concept">rendering problems</annotation></phrase> <phrase><annotation type="concept">reuse of patterns</annotation></phrase> <phrase><annotation type="concept">rhetorical</annotation></phrase> <phrase><annotation type="concept">rhetoric</annotation></phrase> <phrase><annotation type="concept">searchable</annotation></phrase> <phrase><annotation type="concept">search</annotation></phrase> <phrase><annotation type="concept">specialization</annotation></phrase> <phrase><annotation type="concept">structured content type</annotation></phrase> <phrase><annotation type="concept">structured writing domains</annotation></phrase> <phrase><annotation type="concept">style</annotation></phrase> <phrase><annotation type="concept">subject affinities</annotation></phrase> <phrase><annotation type="concept">subject affinity</annotation></phrase> <phrase><annotation type="concept">subject domain</annotation></phrase> <phrase><annotation type="concept">subject-domain</annotation></phrase> <phrase><annotation type="concept">taxonomy</annotation></phrase> <phrase><annotation type="concept">terminology</annotation></phrase> <phrase><annotation type="concept">top-down information architecture</annotation></phrase> <phrase><annotation type="concept" specifically="top-down information architecture">top-down</annotation></phrase> <phrase><annotation type="concept">WYSIWYG</annotation></phrase></p>
<p>Languages</p>
<p><phrase><annotation type="language">ASCIIDOC</annotation></phrase> <phrase><annotation type="language">cascading style sheets</annotation></phrase> <phrase><annotation type="language" specifically="cascading style sheets">CSS</annotation></phrase> <phrase><annotation type="language"><annotation type="standard">DITA</annotation></annotation></phrase> <phrase><annotation type="language"><annotation type="standard">DocBook</annotation></annotation></phrase> <phrase><annotation type="language"><annotation type="standard">HTML</annotation></annotation></phrase> <phrase><annotation type="language">JavaDoc</annotation></phrase> <phrase><annotation type="language">LaTeX</annotation></phrase> <phrase><annotation type="language">Markdown</annotation></phrase> <phrase><annotation type="language">mathml</annotation></phrase> <phrase><annotation type="language">reStructuredText</annotation></phrase> <phrase><annotation type="language">SAM</annotation></phrase> <phrase><annotation type="language">SGML</annotation></phrase> <phrase><annotation type="language">TeX</annotation></phrase> <phrase><annotation type="language">XLIFF</annotation></phrase> <phrase><annotation type="language">XML schema</annotation></phrase> <phrase><annotation type="language"><annotation type="standard">XML</annotation></annotation></phrase> <phrase><annotation type="language">XSD</annotation></phrase> <phrase><annotation type="language">XSL-FO</annotation></phrase></p>
<p>Algorithms</p>
<p><phrase><annotation type="algorithm">active content</annotation></phrase> <phrase><annotation type="algorithm">audit algorithm</annotation></phrase> <phrase><annotation type="algorithm">auditable</annotation></phrase> <phrase><annotation type="algorithm">auditing</annotation></phrase> <phrase><annotation type="algorithm">audit</annotation></phrase> <phrase><annotation type="algorithm">authoring algorithm</annotation></phrase> <phrase><annotation type="algorithm">authoring</annotation></phrase> <phrase><annotation type="algorithm">avoiding duplication</annotation></phrase> <phrase><annotation type="algorithm">change management</annotation></phrase> <phrase><annotation type="algorithm">change</annotation></phrase> <phrase><annotation type="algorithm">collaboration</annotation></phrase> <phrase><annotation type="algorithm">compliance</annotation></phrase> <phrase><annotation type="algorithm" specifically="composition">composability</annotation></phrase> <phrase><annotation type="algorithm">composition algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="composition algorithm">composition</annotation></phrase> <phrase><annotation type="process">conformance</annotation></phrase> <phrase><annotation type="process" specifically="conformance">conformant</annotation></phrase> <phrase><annotation type="process" specifically="conformance">conforming</annotation></phrase> <phrase><annotation type="process" specifically="conformance">conforms</annotation></phrase> <phrase><annotation type="process">content management</annotation></phrase> <phrase><annotation type="algorithm">content reuse algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="content reuse algorithm">content reuse</annotation></phrase> <phrase><annotation type="algorithm" specifically="content reuse algorithm">content-reuse</annotation></phrase> <phrase><annotation type="algorithm">continuous translation</annotation></phrase> <phrase><annotation type="algorithm">deferred synthesis</annotation></phrase> <phrase><annotation type="algorithm">differential presentation</annotation></phrase> <phrase><annotation type="algorithm">differential single sourcing</annotation></phrase> <phrase><annotation type="algorithm">differential synthesis</annotation></phrase> <phrase><annotation type="algorithm">encoding algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="encoding algorithm">encoding</annotation></phrase> <phrase><annotation type="algorithm">exchange algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="exchange algorithm">exchange</annotation></phrase> <phrase><annotation type="algorithm">extract algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="extract algorithm">extract</annotation></phrase> <phrase><annotation type="algorithm">formatting algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="formatting algorithm">formatting</annotation></phrase> <phrase><annotation type="algorithm">information architecture algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="information architecture algorithm">information architecture</annotation></phrase> <phrase><annotation type="algorithm">linking algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="linking algorithm">linking</annotation></phrase> <phrase><annotation type="algorithm">merge algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="merge algorithm">merge</annotation></phrase> <phrase><annotation type="algorithm">modeling algorithm</annotation></phrase> <phrase><annotation type="algorithm">pagination</annotation></phrase> <phrase><annotation type="algorithm">presentation algorithms</annotation></phrase> <phrase><annotation type="algorithm">presentation algorithm</annotation></phrase> <phrase><annotation type="algorithm">presentation</annotation></phrase> <phrase><annotation type="algorithm">publication</annotation></phrase> <phrase><annotation type="algorithm">publish  algorithm</annotation></phrase> <phrase><annotation type="algorithm">publishing algorithm</annotation></phrase> <phrase><annotation type="algorithm">publishing</annotation></phrase> <phrase><annotation type="algorithm">publishing</annotation></phrase> <phrase><annotation type="algorithm">quality algorithm</annotation></phrase> <phrase><annotation type="algorithm">quality</annotation></phrase> <phrase><annotation type="algorithm">quality</annotation></phrase> <phrase><annotation type="algorithm">relevance</annotation></phrase> <phrase><annotation type="algorithm">relevant</annotation></phrase> <phrase><annotation type="algorithm">rendering algorithm</annotation></phrase> <phrase><annotation type="algorithm">rendering</annotation></phrase> <phrase><annotation type="algorithm">repeatability</annotation></phrase> <phrase><annotation type="algorithm">repeatable</annotation></phrase> <phrase><annotation type="algorithm">reuse algorithm</annotation></phrase> <phrase><annotation type="algorithm">reuse</annotation></phrase> <phrase><annotation type="algorithm">separate content from formatting</annotation></phrase> <phrase><annotation type="algorithm">separating content form formatting</annotation></phrase> <phrase><annotation type="algorithm">separating content from formatting</annotation></phrase> <phrase><annotation type="algorithm">single source of truth algorithm</annotation></phrase> <phrase><annotation type="algorithm">single source of truth</annotation></phrase> <phrase><annotation type="algorithm">single sourcing algorithm</annotation></phrase> <phrase><annotation type="algorithm">single sourcing</annotation></phrase> <phrase><annotation type="algorithm">single sourcing</annotation></phrase> <phrase><annotation type="algorithm">single-source</annotation></phrase> <phrase><annotation type="algorithm">synthesis algorithm</annotation></phrase> <phrase><annotation type="algorithm">synthesis algorithm</annotation></phrase> <phrase><annotation type="algorithm">synthesis</annotation></phrase> <phrase><annotation type="algorithm">timeliness</annotation></phrase> <phrase><annotation type="algorithm">timely</annotation></phrase> <phrase><annotation type="algorithm">translation</annotation></phrase> <phrase><annotation type="algorithm">validate</annotation></phrase> <phrase><annotation type="algorithm" specifically="conformance">validation</annotation></phrase> <phrase><annotation type="algorithm">validation</annotation></phrase> <phrase><annotation type="algorithm">validity</annotation></phrase> <phrase><annotation type="algorithm">writing</annotation></phrase></p>
<p>Tools</p>
<p><phrase><annotation type="tool">browser</annotation></phrase> <phrase><annotation type="tool" specifically="content management system">CMS</annotation></phrase> <phrase><annotation type="tool">content management system</annotation></phrase> <phrase><annotation type="tool">content management systems</annotation></phrase> <phrase><annotation type="tool">Doxygen</annotation></phrase> <phrase><annotation type="tool">ebook readers</annotation></phrase> <phrase><annotation type="tool">FrameMaker</annotation></phrase> <phrase><annotation type="tool">FrameScript</annotation></phrase> <phrase><annotation type="tool">help systems</annotation></phrase> <phrase><annotation type="tool">Microsoft Word</annotation></phrase> <phrase><annotation type="tool">SPFE</annotation></phrase> <phrase><annotation type="tool">Sphinx</annotation></phrase> <phrase><annotation type="tool">XML database</annotation></phrase> <phrase><annotation type="tool">XML databases</annotation></phrase> <phrase><annotation type="tool">markup</annotation></phrase> <phrase><annotation type="tool">markup language</annotation></phrase> <phrase><annotation type="tool">markup languages</annotation></phrase> <phrase><annotation type="tool">Word</annotation></phrase> <phrase><annotation type="tool">publishing pipeline</annotation></phrase> <phrase><annotation type="tool">repository</annotation></phrase> <phrase><annotation type="tool">page description language</annotation></phrase> <phrase><annotation type="tool">page descriptions languages</annotation></phrase> <phrase><annotation type="tool">schema</annotation></phrase> <phrase><annotation type="tool">schema languages</annotation></phrase> <phrase><annotation type="tool">search engine</annotation></phrase> <phrase><annotation type="tool">tool chain</annotation></phrase> <phrase><annotation type="tool">tool chains</annotation></phrase> <phrase><annotation type="tool">typesetting languages</annotation></phrase> <phrase><annotation type="tool">version control system</annotation></phrase> <phrase><annotation type="tool">workflow</annotation></phrase> <phrase><annotation type="tool">widgets</annotation></phrase> <phrase><annotation type="tool">wiki</annotation></phrase> <phrase><annotation type="tool">rights management</annotation></phrase> <phrase><annotation type="tool">queries</annotation></phrase> <phrase><annotation type="tool">query</annotation></phrase> <phrase><annotation type="tool">formatting language</annotation></phrase> <phrase><annotation type="tool">formatting languages</annotation></phrase></p>
<p>Roles</p>
<p><phrase><annotation type="role">information architect</annotation></phrase> <phrase><annotation type="role">content engineer</annotation></phrase> <phrase><annotation type="role">content engineers</annotation></phrase> <phrase><annotation type="role">content strategists</annotation></phrase> <phrase><annotation type="role">document designers</annotation></phrase> <phrase><annotation type="role">information architect</annotation></phrase> <phrase><annotation type="role">information architects</annotation></phrase> <phrase><annotation type="role">publication designers</annotation></phrase> <phrase><annotation type="role">subject matter experts</annotation></phrase></p>
<p>Companies</p>
<p><phrase><annotation type="company">Amazon</annotation></phrase> <phrase><annotation type="company">Narrative Science</annotation></phrase></p>
<p>Structures <phrase><annotation type="structure">cross references</annotation></phrase> <phrase><annotation type="structure">id</annotation></phrase> <phrase><annotation type="structure">ids</annotation></phrase> <phrase><annotation type="structure">index</annotation></phrase> <phrase><annotation type="structure">key</annotation></phrase> <phrase><annotation type="structure">keys</annotation></phrase> <phrase><annotation type="structure">list</annotation></phrase> <phrase><annotation type="structure">microformats</annotation></phrase> <phrase><annotation type="structure">subject annotation</annotation></phrase> <phrase><annotation type="structure">subject annotations</annotation></phrase> <phrase><annotation type="structure">table</annotation></phrase> <phrase><annotation type="structure">table of contents</annotation></phrase> <phrase><annotation type="structure">tables</annotation></phrase> <phrase><annotation type="structure">tables of contents</annotation></phrase> <phrase><annotation type="structure">cals table model</annotation></phrase> <phrase><annotation type="structure">links</annotation></phrase> <phrase><annotation type="structure">rhetorical block</annotation></phrase> <phrase><annotation type="structure">rhetorical blocks</annotation></phrase> <phrase><annotation type="structure">semantic block</annotation></phrase> <phrase><annotation type="structure">semantic blocks</annotation></phrase> <phrase><annotation type="structure">topic</annotation></phrase> <phrase><annotation type="structure">topics</annotation></phrase> <phrase><annotation type="structure" specifically="table of contents">TOC</annotation></phrase> <phrase><annotation type="structure">rhetorical pattern</annotation></phrase> <phrase><annotation type="structure">rhetorical structure</annotation></phrase></p>
<p>Standards (see also entries under languages, some of which are standards) <phrase><annotation type="standard">iso 1806</annotation></phrase> <phrase><annotation type="standard">s1000d</annotation></phrase></p>
<p>Programming languages</p>
<p><phrase><annotation type="programming-language">java</annotation></phrase> <phrase><annotation type="programming-language">javascript</annotation></phrase></p>
<p>Media</p>
<p><phrase><annotation type="media">paper</annotation></phrase> <phrase><annotation type="media">pdf</annotation></phrase> <phrase><annotation type="media">internet</annotation></phrase> <phrase><annotation type="media">hypertext</annotation></phrase> <phrase><annotation type="media">Web</annotation></phrase> <phrase><annotation type="media">web pages</annotation></phrase> <phrase><annotation type="media">tablet</annotation></phrase> <phrase><annotation type="media">online media</annotation></phrase> <phrase><annotation type="media">books</annotation></phrase></p>
</annotations>
<index>
<record>
<type>concept</type>
<term>quality</term>
</record>
</index>
<p>When I talk to programmers about what I do, they sometimes ask me why structured writing is important any more. Machines are getting so good at reading human language, they argue, that semantic markup to assist the machine is becoming pointless.</p>
<section>
<title>Robots that read</title>
<p>Indeed, machines are getting better at understanding human language. An approach called Deep Learning is becoming a key technology for companies like Facebook, Google, and Baidu for both <phrase><citation type = "citation" value = "http://www.technologyreview.com/featuredstory/540001/teaching-machines-to-understand-us/">language comprehension</citation></phrase> and <phrase>speech recognition</phrase>.<citation type = "citation" value = "http://www.technologyreview.com/news/544651/baidus-deep-learning-system-rivals-people-at-speech-recognition/"/></p>
<p>The semantic web initiative has long sought to create a Web that is not just people talking to people but also machines talking to machines. This has traditionally involved a separate communication channel – semantic markup embedded in text but not presented to the human reader. It has also involved the creation of specialized semantic data stores with query languages to match, to teach computers to understand relationships that humans express in ordinary language.</p>
<p>But this two-channel approach – one text for humans, another for machines – makes sense only if we assume that machines cannot read human language. If machines and humans can read the same text, then we shouldn’t need two channels. The human Web becomes the semantic Web.</p>
<p>After all, human text has always been semantic. Semantics is simply the study of meaning. All meaningful texts have <phrase><annotation type="concept">semantics</annotation></phrase>. However, it is difficult to build algorithms that can read and understand like humans do. Semantic technologies dumb down the semantics for machines because machines are not bright enough to read the regular semantics.</p>
</section>
<section>
<title>Dumbing it down for the robots</title>
<p>This dumbing down necessarily involves omitting a great deal. Fully expressing the meaning and implications of even the simplest text in a data representation language such as <phrase><annotation type="concept">RDF</annotation></phrase> (Resource Description Framework) would be daunting. This creates a problem for semantic technologies: which semantics do you select to dumb down to the machine’s level and for what purpose? This is why there is no universal approach to structured writing that works for all purposes and all subject matter. You can only represent a fraction of the human semantics to the machine, and what you choose to represent depends on what you want the machine to do.</p>
<p>But if the machine could read the text as well as you can, then these limitations vanish. Deep learning is moving us in that direction.</p>
<p>Why then should we bother with structured writing? Because while machines may be rapidly learning to read human text, humans still write that text, and most humans are not good writers.</p>
</section>
<section>
<title>Making humans better writers</title>
<p>By that I don’t just mean that they use poor grammar or spelling or that they create run-on sentences or use the passive voice too much, though all those things may be true and annoying. I mean something more fundamental: they don’t say the right things in the right way for the right audience. They leave out stuff that needs to be said, they weigh their text down with stuff that does not need to be said, or they write in a way that is hard to understand.</p>
<p>We all suffer from a malady called <phrase><annotation type="concept">the Curse of Knowledge</annotation></phrase>,<citation type = "citation" value = "https://en.wikipedia.org/wiki/Curse_of_knowledge"/> which makes it difficult for us to understand what it is like not to understand something we know. We take shortcuts, we make assumptions, we say things in obscure ways, and we just plain leave stuff out.</p>
<p>This is not a result of mere carelessness. <phrase><citation type = "citation" value = "http://everypageispageone.com/2015/08/04/the-economy-of-language-or-why-we-argue-about-words/">The efficiency of human communication rests on our ability to assume that the person we are communicating with shares a huge collection of experiences, ideas, and vocabulary in common with us.</citation></phrase> Laboriously stating the obvious is as much a writing fault as omitting the necessary. Yet what is obvious to one reader may be obscure to another. The curse of knowledge is that as soon as something becomes obvious to us, we can no longer imagine it being obscure to someone else.</p>
<p>Thus, much human-to-human communication fails. The recipient of the communication simply does not understand it or does not receive needed information because the writer left it out. Machines may learn to be better readers than we are, but no machine can learn to read information that isn’t there.</p>
</section>
<section>
<title>We write better for robots than we do for humans</title>
<p>Actually, one of the advantages of the relative stupidity of robots is that it forces us to be very careful in how we create and structure data for machines to act on. The computer science community coined the phrase “garbage in, garbage out” very early, because the machines were, and to a large extent still are, too stupid to identify garbage input, and they did not have the capacity to seek clarification or consult other sources, as a human would. They just spit out garbage.</p>
<p>Therefore, we had to improve the quality and precision of the data going in. We worked out precise data structures and implemented elaborate audit mechanisms to make sure that data was complete and correct before we fed it to the machine.</p>
<p>We have never been as diligent in improving the quality of the content we feed human beings. Faced with poor content, human beings do not halt and catch fire; they either lose interest or do more research. Given our adaptability as researchers and our tenacity in pursuing things that really matter to us, we often manage to muddle through bad content, though at considerable economic cost. And writers are often so removed from their readers that they have no notion of what the poor reader is going through. If readers did halt and catch fire, we might put more effort and attention into content quality.</p>
<p>Even today, with many companies implementing enterprise content management and making the store of corporate knowledge available to all employees, most of the emphasis is on making content easier to find, not on making that content more worth finding. (This despite the fact that the best thing you can do to make content easy to find it to make it more worth finding.) People trying to build the semantic web spend a lot of time trying to make the data they prepare for machines correct, precise, and complete. We don’t do nearly as much for humans. Until we do, deep learning alone may not be enough to make the human web the semantic web.</p>
<p>Part of the problem is that improving content quality runs up against the <phrase><annotation type="concept">curse of knowledge</annotation></phrase>. Both writers and the subject matter experts who review their content suffer from the curse, which makes it difficult to audit written content. Style guides and templates can help, but their requirements are difficult to remember and compliance is hard to audit, meaning there is little feedback for an writer who strays.</p>
<p>The curse of knowledge and the distance separating writers from readers are a major source of complexity. Structured writing provides a way to guide and audit content, specifically, the <phrase><annotation type="italic">rhetoric</annotation></phrase> of our content: what we say and how we say it to achieve a specific end.</p>
<p>Therefore, when people ask me whether structured writing is relevant, I say “garbage in, garbage out.” Structured writing enables us to write in the subject domain (wholly or partially), which allows us to guide and audit rhetoric in ways not otherwise possible. It also allows us to factor out many constraints, simplifying the writing task and allowing writers to devote more attention to the quality of their content, whether that content is read by people or robots.</p>
</section>
<section>
<title>Structure, art, and science</title>
<p>Many writers reject the idea that imposing constraints can improve quality. They see writing as a uniquely human and individual act, an art, not a science and, therefore, immune to the encroachment of algorithms and robots. But I suggest that structures and algorithms do not diminish the human and artistic aspects of writing. Rather, they supplement and enhance them.</p>
<p>We see this pattern in all the arts. Music has always depended on making and perfecting instruments as tools of the musician. Similarly the mathematics of musical theory gave us <phrase><annotation type="concept">well-tempered tuning</annotation></phrase>, on which modern Western music is based.</p>
<p><phrase><citation type = "citation" value = "http://ruben.verborgh.org/blog/2013/02/21/programming-is-an-art/">Computer programming is widely regarded as an art</citation></phrase> among practitioners, but the use of sound structures is an inseparable part of that art. Art lies not in the rejection of structure but in its mature and creative use. As noted computer scientist Donald Knuth observes in his essay, <phrase><annotation type="citetitle">Computer Programming as an Art</annotation></phrase>, most fields are not either an art or a science, but a mixture of both.</p>
<blockquote>
<citation type = "citation" value = "http://dl.acm.org/citation.cfm?id=361612"/>
<p>Apparently most authors who examine such a question come to this same conclusion, that their subject is both a science and an art, whatever their subject is. I found a book about elementary photography, written in 1893, which stated that “the development of the photographic image is both an art and a science.” In fact, when I first picked up a dictionary in order to study the words “art” and “science,” I happened to glance at the editor’s preface, which began by saying, “The making of a dictionary is both a science and an art.”</p>
</blockquote>
<p>As writers, we can use structures, patterns, and algorithms as aids to art, just like every other profession. Of course, few writers would claim that there is no structure involved in writing. We have long recognized the importance of grammatical structure and rhetorical structure in enhancing communication. The question is, can the type of structures that structured writing proposes improve our writing, and if so, in what areas? Traditional poetry is highly structured, but using an <phrase><annotation type="tool">XML schema</annotation></phrase> won’t help you write a better sonnet. On the other hand, following the accepted rhetorical pattern of a recipe will help you write a better cookbook, and using structured writing to create your recipes will help you improve the consistency of your recipes, produce them more efficiently, and exploit them as assets in new ways.</p>
<p>The question then becomes: how much of our work is like recipes and how much is like sonnets? That is, how much of business and technical communication would benefit from structured writing? The answer, I believe, is that a great deal of business and technical communication would benefit. You may not see any obvious structure in much of that communication, but that is not evidence that structure is inappropriate. Rather, it means that structure has not been developed and applied to the content.</p>
</section>
<section>
<title>Contra-structured content</title>
<p>We must also acknowledge that many writers have had a bad experience with structured writing. Often, the structured writing system was not chosen or designed by the writers to enhance their art; it was imposed externally for some other purpose, such as to facilitate the operation of a content management system or to make it easier to reuse content. Too frequently, such systems move complexity away from some other function and dump it on writers without sufficient thought being given to where that complexity should go. Such systems actively interfere with the writer’s task, hindering the production of quality content.</p>
<p>A badly designed structured writing system forces writers to use structures that are not designed to support their tasks. The result is not merely unstructured for these purposes, it is actually <phrase><annotation type="italic">contra-structured</annotation></phrase>. Such a system enforces structures that actively block writers from doing their best work.</p>
<p>I talk to writers all the time who show me page designs and layouts that make no sense, lamenting that the system gives them no alternatives. Content structure is not generic, and you cannot expect to simply install the flavor-of-the-month CMS or structured writing system and get a good outcome. The system you use must at least be compatible with, if not actively supportive of, the rhetoric you need to create.</p>
<p>Properly applied, as a means to guide and enhance the work of writers, structured writing can substantially improve content quality. In upcoming chapters, I will look at the algorithms of structured content, many of which relate directly to content quality.</p>
</section>
<section>
<title>Until the robots take over</title>
<p>Of course, this all presumes that the machines are not becoming better writers than us. Companies like Narrative Science are working to change that, with systems that generate “human-sounding data-driven communications at enterprise scale.”<citation type = "idref" value = "fn.narrative-science"/></p>
<footnote id="fn.narrative-science">
<p><phrase><citation type = "citation" value = "http://narrativescience.com">Narrative Science</citation></phrase></p>
</footnote>
<p>Do robots suffer from the <phrase><annotation type="concept">curse of knowledge</annotation></phrase>? Maybe not. But current writing robots certainly work with highly structured data, so structured writing is still key to quality content even when the robots do come for our keyboards.</p>
<p>Actually, according to James Bessen’s recent article in The Atlantic, <phrase><citation type = "citation" value = "http://www.theatlantic.com/business/archive/2016/01/automation-paradox/424437/">The Automation Paradox,</citation></phrase> automation does not decimate white collar jobs the way we have been told to fear. By reducing costs, it increases demand, resulting in net growth of jobs, at least for people who learn to use the new technology effectively.</p>
<p>That said, all the semantic technology and content management in the world won’t make any difference until we improve the quality of content on a consistent basis. Appropriately applied, structured writing, particularly structured writing in the <phrase><annotation type="concept">subject domain</annotation></phrase>, is one of our best tools for doing that.</p>
</section>
</chapter>
