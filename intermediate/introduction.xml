<?xml version="1.0" encoding="UTF-8"?>
<chapter name="introduction">
<title>Introduction</title>

<annotations>
<p>Concepts</p>
<p><phrase><annotation type="concept">abstract language</annotation></phrase> <phrase><annotation type="concept">adaptive content</annotation></phrase> <phrase><annotation type="concept">affordances</annotation></phrase> <phrase><annotation type="concept">AI</annotation></phrase> <phrase><annotation type="concept" specifically="algorithm">algorithms</annotation></phrase> <phrase><annotation type="concept">algorithm</annotation></phrase> <phrase><annotation type="concept">annotations</annotation></phrase> <phrase><annotation type="concept">annotation</annotation></phrase> <phrase><annotation type="concept">apps</annotation></phrase> <phrase><annotation type="concept" specifically="block-and-map architecture">block and map architecture</annotation></phrase> <phrase><annotation type="concept">block-and-map architecture</annotation></phrase> <phrase><annotation type="concept" specifically="bottom-up information architecture">bottom-up architecture</annotation></phrase> <phrase><annotation type="concept">bottom-up information architecture</annotation></phrase> <phrase><annotation type="concept">categories</annotation></phrase> <phrase><annotation type="concept">categorization</annotation></phrase> <phrase><annotation type="concept">classification</annotation></phrase> <phrase><annotation type="concept">consistency</annotation></phrase> <phrase><annotation type="concept">constraints</annotation></phrase> <phrase><annotation type="concept">content engineering</annotation></phrase> <phrase><annotation type="concept">content hygiene</annotation></phrase> <phrase><annotation type="concept">content plan</annotation></phrase> <phrase><annotation type="concept">content silos</annotation></phrase> <phrase><annotation type="concept">content strategy</annotation></phrase> <phrase><annotation type="concept">coverage</annotation></phrase> <phrase><annotation type="concept">curse of knowledge</annotation></phrase> <phrase><annotation type="concept">desktop publishing system</annotation></phrase> <phrase><annotation type="concept">document domain</annotation></phrase> <phrase><annotation type="concept">document type</annotation></phrase> <phrase><annotation type="concept">document-domain</annotation></phrase> <phrase><annotation type="concept">Duplication</annotation></phrase> <phrase><annotation type="concept">electronic media</annotation></phrase> <phrase><annotation type="concept">Every Page is Page One</annotation></phrase> <phrase><annotation type="concept">extensibility</annotation></phrase> <phrase><annotation type="concept">faceted navigation</annotation></phrase> <phrase><annotation type="concept">feeds</annotation></phrase> <phrase><annotation type="concept">filtering</annotation></phrase> <phrase><annotation type="concept">findability</annotation></phrase> <phrase><annotation type="concept">frameworks</annotation></phrase> <phrase><annotation type="concept">functional lucidity</annotation></phrase> <phrase><annotation type="concept">functionally lucid</annotation></phrase> <phrase><annotation type="concept">future proofing</annotation></phrase> <phrase><annotation type="concept">future proof</annotation></phrase> <phrase><annotation type="concept">guidance</annotation></phrase> <phrase><annotation type="concept">hierarchical structure</annotation></phrase> <phrase><annotation type="concept">hybrid markup language</annotation></phrase> <phrase><annotation type="concept" specifically="information architecture">information architectures</annotation></phrase> <phrase><annotation type="concept">information architecture</annotation></phrase> <phrase><annotation type="concept">information design</annotation></phrase> <phrase><annotation type="concept">information foraging</annotation></phrase> <phrase><annotation type="concept">information mapping</annotation></phrase> <phrase><annotation type="concept">information scent</annotation></phrase> <phrase><annotation type="concept">information snacking</annotation></phrase> <phrase><annotation type="concept">information typing</annotation></phrase> <phrase><annotation type="concept" specifically="information snacking">information-snacking</annotation></phrase> <phrase><annotation type="concept">information-typing</annotation></phrase> <phrase><annotation type="concept">interactive media</annotation></phrase> <phrase><annotation type="concept" specifically="management domain">management domains</annotation></phrase> <phrase><annotation type="concept" specifically="management domain">Management domains</annotation></phrase> <phrase><annotation type="concept">management domain</annotation></phrase> <phrase><annotation type="concept" specifically="management domain">management-domain</annotation></phrase> <phrase><annotation type="concept" specifically="markup language">markup languages</annotation></phrase> <phrase><annotation type="concept">markup language</annotation></phrase> <phrase><annotation type="concept">markup</annotation></phrase> <phrase><annotation type="concept">media domain</annotation></phrase> <phrase><annotation type="concept" specifically="media domain">media-domain</annotation></phrase> <phrase><annotation type="concept" specifically="media domain">media domains</annotation></phrase> <phrase><annotation type="concept">metadata</annotation></phrase> <phrase><annotation type="concept">namespace</annotation></phrase> <phrase><annotation type="concept">natural language processing</annotation></phrase> <phrase><annotation type="concept">navigation</annotation></phrase> <phrase><annotation type="concept">normalization</annotation></phrase> <phrase><annotation type="concept">out-of-band communication</annotation></phrase> <phrase><annotation type="concept">personalized content</annotation></phrase> <phrase><annotation type="concept">progressive disclosure</annotation></phrase> <phrase><annotation type="concept">profiling</annotation></phrase> <phrase><annotation type="concept">referential integrity</annotation></phrase> <phrase><annotation type="concept">rendering problems</annotation></phrase> <phrase><annotation type="concept">reuse of patterns</annotation></phrase> <phrase><annotation type="concept">rhetorical quality</annotation></phrase> <phrase><annotation type="concept">rhetorical structure</annotation></phrase> <phrase><annotation type="concept" specifically="rhetoric">rhetorical</annotation></phrase> <phrase><annotation type="concept">rhetoric</annotation></phrase> <phrase><annotation type="concept">schema language</annotation></phrase> <phrase><annotation type="concept" specifically="schema">Schemas</annotation></phrase> <phrase><annotation type="concept" specifically="schema">schemas</annotation></phrase> <phrase><annotation type="concept">searchable</annotation></phrase> <phrase><annotation type="concept">search</annotation></phrase> <phrase><annotation type="concept">social networks</annotation></phrase> <phrase><annotation type="concept">specialization</annotation></phrase> <phrase><annotation type="concept">stop list</annotation></phrase> <phrase><annotation type="concept">structural block</annotation></phrase> <phrase><annotation type="concept">structured content type</annotation></phrase> <phrase><annotation type="concept">structured writing domains</annotation></phrase> <phrase><annotation type="concept">style guide</annotation></phrase> <phrase><annotation type="concept">style</annotation></phrase> <phrase><annotation type="concept">subject affinities</annotation></phrase> <phrase><annotation type="concept">subject affinity</annotation></phrase> <phrase><annotation type="concept">subject domain</annotation></phrase> <phrase><annotation type="concept">subject-domain</annotation></phrase> <phrase><annotation type="concept">Subject</annotation></phrase> <phrase><annotation type="concept">taxonomy</annotation></phrase> <phrase><annotation type="concept">terminology management</annotation></phrase> <phrase><annotation type="concept">terminology</annotation></phrase> <phrase><annotation type="concept">top-down information architecture</annotation></phrase> <phrase><annotation type="concept" specifically="top-down information architecture">top-down</annotation></phrase> <phrase><annotation type="concept">vector graphics</annotation></phrase> <phrase><annotation type="concept">web publishing</annotation></phrase> <phrase><annotation type="concept">Wikipedia</annotation></phrase> <phrase><annotation type="concept">workflow</annotation></phrase> <phrase><annotation type="concept">WYSIWYG</annotation></phrase> <phrase><annotation type="concept">glyphs</annotation></phrase> <phrase><annotation type="concept" specifically="hierarchical information architecture">hierarchical information architectures</annotation></phrase></p>
<p>Markup Languages</p>
<p><phrase><annotation type="markup-language">ASCIIDOC</annotation></phrase> <phrase><annotation type="markup-language"><annotation type="standard">CommonMark</annotation></annotation></phrase> <phrase><annotation type="markup-language"><annotation type="standard">DITA</annotation></annotation></phrase> <phrase><annotation type="markup-language"><annotation type="standard">DocBook</annotation></annotation></phrase> <phrase><annotation type="markup-language">GitHub flavored Markdown</annotation></phrase> <phrase><annotation type="markup-language"><annotation type="standard">HTML</annotation></annotation></phrase> <phrase><annotation type="markup-language"><annotation type="standard">HTML5</annotation></annotation></phrase> <phrase><annotation type="markup-language">JavaDoc</annotation></phrase> <phrase><annotation type="markup-language">LaTeX</annotation></phrase> <phrase><annotation type="markup-language">Lightweight DITA</annotation></phrase> <phrase><annotation type="markup-language">Markdown</annotation></phrase> <phrase><annotation type="markup-language">mathml</annotation></phrase> <phrase><annotation type="markup-language">reStructuredText</annotation></phrase> <phrase><annotation type="markup-language">SAM</annotation></phrase> <phrase><annotation type="markup-language"><annotation type="standard">SGML</annotation></annotation></phrase> <phrase><annotation type="markup-language">TeX</annotation></phrase> <phrase><annotation type="markup-language">vCard</annotation></phrase> <phrase><annotation type="markup-language">Wiki markup</annotation></phrase> <phrase><annotation type="markup-language">XLIFF</annotation></phrase> <phrase><annotation type="markup-language"><annotation type="standard">XML</annotation></annotation></phrase> <phrase><annotation type="markup-language"><annotation type="standard">XHTML</annotation></annotation></phrase></p>
<p>Schema languages</p>
<p><phrase><annotation type="schema-language">XSD</annotation></phrase> <phrase><annotation type="schema-language" specifically="XSD">XML schema</annotation></phrase></p>
<p>Programming languages</p>
<p><phrase><annotation type="programming-language" specifically="cascading style sheets">CSS</annotation></phrase> <phrase><annotation type="programming-language">cascading style sheets</annotation></phrase> <phrase><annotation type="programming-language">java</annotation></phrase> <phrase><annotation type="programming-language">javascript</annotation></phrase> <phrase><annotation type="language-language">XSL-FO</annotation></phrase> <phrase><annotation type="programming-language">XSLT</annotation></phrase></p>
<p>Algorithms</p>
<p><phrase><annotation type="algorithm">active content</annotation></phrase> <phrase><annotation type="algorithm" specifically="assemble from pieces">Assemble from Pieces</annotation></phrase> <phrase><annotation type="algorithm" specifically="assemble from pieces">assemble from pieces</annotation></phrase> <phrase><annotation type="algorithm" specifically="auditing algorithm">audit algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="auditing algorithm">auditable</annotation></phrase> <phrase><annotation type="algorithm" specifically="auditing algorithm">auditing</annotation></phrase> <phrase><annotation type="algorithm" specifically="auditing algorithm">audits</annotation></phrase> <phrase><annotation type="algorithm" specifically="auditing algorithm">audit</annotation></phrase> <phrase><annotation type="algorithm">authoring algorithm</annotation></phrase> <phrase><annotation type="algorithm">authoring</annotation></phrase> <phrase><annotation type="algorithm">avoiding duplication</annotation></phrase> <phrase><annotation type="algorithm" specifically="avoiding duplication">avoids duplication</annotation></phrase> <phrase><annotation type="algorithm">change management</annotation></phrase> <phrase><annotation type="algorithm">change</annotation></phrase> <phrase><annotation type="algorithm" specifically="collaboration">collaborate</annotation></phrase> <phrase><annotation type="algorithm">collaboration</annotation></phrase> <phrase><annotation type="algorithm">compliance</annotation></phrase> <phrase><annotation type="algorithm" specifically="composition">composability</annotation></phrase> <phrase><annotation type="algorithm">composition algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="composition algorithm">composition</annotation></phrase> <phrase><annotation type="algorithm">conformance-checking algorithm</annotation></phrase> <phrase><annotation type="process">conformance</annotation></phrase> <phrase><annotation type="process" specifically="conformance">conformant</annotation></phrase> <phrase><annotation type="process" specifically="conformance">conforming</annotation></phrase> <phrase><annotation type="process" specifically="conformance">conforms</annotation></phrase> <phrase><annotation type="algorithm">content generation algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="content generation algorithm">content generation</annotation></phrase> <phrase><annotation type="algorithm" specifically="content management algorithm">content management algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="content management algorithm">content management</annotation></phrase> <phrase><annotation type="algorithm">content reuse algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="content reuse algorithm">content reuse</annotation></phrase> <phrase><annotation type="algorithm" specifically="content generation algorithm">content-generation algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="content generation algorithm">Generating content</annotation></phrase> <phrase><annotation type="algorithm" specifically="content reuse algorithm">content-reuse</annotation></phrase> <phrase><annotation type="algorithm">continuous translation</annotation></phrase> <phrase><annotation type="algorithm">deferred synthesis</annotation></phrase> <phrase><annotation type="algorithm">differential presentation</annotation></phrase> <phrase><annotation type="algorithm">differential single sourcing</annotation></phrase> <phrase><annotation type="algorithm">differential synthesis</annotation></phrase> <phrase><annotation type="algorithm">eliminating duplication</annotation></phrase> <phrase><annotation type="algorithm">encoding algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="encoding algorithm">encoding</annotation></phrase> <phrase><annotation type="algorithm">exchange algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="exchange algorithm">exchange</annotation></phrase> <phrase><annotation type="algorithm">extract algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="extract algorithm">extraction algorithms</annotation></phrase> <phrase><annotation type="algorithm" specifically="extract algorithm">extraction algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="extract algorithm">extract</annotation></phrase> <phrase><annotation type="algorithm" specifically="formatting algorithm">formatting algorithms</annotation></phrase> <phrase><annotation type="algorithm">formatting algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="formatting algorithm">formatting</annotation></phrase> <phrase><annotation type="algorithm">information architecture algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="information architecture algorithm">information architecture</annotation></phrase> <phrase><annotation type="algorithm">linking algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="linking algorithm">linking</annotation></phrase> <phrase><annotation type="algorithm">merge algorithm</annotation></phrase> <phrase><annotation type="algorithm" specifically="merge algorithm">merge</annotation></phrase> <phrase><annotation type="algorithm">modeling algorithm</annotation></phrase> <phrase><annotation type="algorithm">pagination</annotation></phrase> <phrase><annotation type="algorithm">presentation algorithms</annotation></phrase> <phrase><annotation type="algorithm">presentation algorithm</annotation></phrase> <phrase><annotation type="algorithm">presentation</annotation></phrase> <phrase><annotation type="algorithm">publication</annotation></phrase> <phrase><annotation type="algorithm">publish  algorithm</annotation></phrase> <phrase><annotation type="algorithm">publishing algorithm</annotation></phrase> <phrase><annotation type="algorithm">publishing</annotation></phrase> <phrase><annotation type="algorithm">quality algorithm</annotation></phrase> <phrase><annotation type="algorithm">quality</annotation></phrase> <phrase><annotation type="algorithm">relevance</annotation></phrase> <phrase><annotation type="algorithm">relevant</annotation></phrase> <phrase><annotation type="algorithm">rendering algorithm</annotation></phrase> <phrase><annotation type="algorithm">rendering</annotation></phrase> <phrase><annotation type="algorithm">repeatability</annotation></phrase> <phrase><annotation type="algorithm">repeatable</annotation></phrase> <phrase><annotation type="algorithm">reuse algorithm</annotation></phrase> <phrase><annotation type="algorithm">reuse</annotation></phrase> <phrase><annotation type="algorithm" specifically="separating content form formatting">separate content from formatting</annotation></phrase> <phrase><annotation type="algorithm" specifically="separating content form formatting">separating content from formatting</annotation></phrase> <phrase><annotation type="algorithm" specifically="separating content from formatting">separation of content from formatting</annotation></phrase> <phrase><annotation type="algorithm">single source of truth algorithm</annotation></phrase> <phrase><annotation type="algorithm">single source of truth</annotation></phrase> <phrase><annotation type="algorithm">single sourcing algorithm</annotation></phrase> <phrase><annotation type="algorithm">single sourcing</annotation></phrase> <phrase><annotation type="algorithm">single sourcing</annotation></phrase> <phrase><annotation type="algorithm">single-source</annotation></phrase> <phrase><annotation type="algorithm">synthesis algorithm</annotation></phrase> <phrase><annotation type="algorithm">synthesis algorithm</annotation></phrase> <phrase><annotation type="algorithm">synthesis</annotation></phrase> <phrase><annotation type="algorithm">timeliness</annotation></phrase> <phrase><annotation type="algorithm">timely</annotation></phrase> <phrase><annotation type="algorithm">translation</annotation></phrase> <phrase><annotation type="algorithm">validate</annotation></phrase> <phrase><annotation type="algorithm" specifically="conformance">validation</annotation></phrase> <phrase><annotation type="algorithm">validation</annotation></phrase> <phrase><annotation type="algorithm">validity</annotation></phrase> <phrase><annotation type="algorithm">writing</annotation></phrase></p>
<p>Tools</p>
<p><phrase><annotation type="tool" specifically="API documentation tool">API documentation tools</annotation></phrase> <phrase><annotation type="tool">browser</annotation></phrase> <phrase><annotation type="tool" specifically="component content management system">CCMS</annotation></phrase> <phrase><annotation type="tool" specifically="content management system">CMS</annotation></phrase> <phrase><annotation type="tool">component content management system</annotation></phrase> <phrase><annotation type="tool">content management systems</annotation></phrase> <phrase><annotation type="tool">content management system</annotation></phrase> <phrase><annotation type="tool" specifically="desktop publishing system">desktop publishing application</annotation></phrase> <phrase><annotation type="tool" specifically="desktop publishing system">desktop publishing programs</annotation></phrase> <phrase><annotation type="tool" specifically="desktop publishing system">desktop publishing</annotation></phrase> <phrase><annotation type="tool">desktop publishing system</annotation></phrase> <phrase><annotation type="tool">DITA CMS</annotation></phrase> <phrase><annotation type="tool">Doxygen</annotation></phrase> <phrase><annotation type="tool">ebook readers</annotation></phrase> <phrase><annotation type="tool" specifically="formatting language">formatting languages</annotation></phrase> <phrase><annotation type="tool">formatting language</annotation></phrase> <phrase><annotation type="tool">formatting software</annotation></phrase> <phrase><annotation type="tool">FrameMaker</annotation></phrase> <phrase><annotation type="tool">FrameScript</annotation></phrase> <phrase><annotation type="tool">GitHub</annotation></phrase> <phrase><annotation type="tool">help systems</annotation></phrase> <phrase><annotation type="tool">Jekyll</annotation></phrase> <phrase><annotation type="tool">Liquid</annotation></phrase> <phrase><annotation type="tool">Microsoft Word</annotation></phrase> <phrase><annotation type="tool">page description language</annotation></phrase> <phrase><annotation type="tool">page descriptions languages</annotation></phrase> <phrase><annotation type="tool">publishing pipeline</annotation></phrase> <phrase><annotation type="tool">queries</annotation></phrase> <phrase><annotation type="tool">query</annotation></phrase> <phrase><annotation type="tool">repository</annotation></phrase> <phrase><annotation type="tool">rights management</annotation></phrase> <phrase><annotation type="tool">schema languages</annotation></phrase> <phrase><annotation type="tool">schema</annotation></phrase> <phrase><annotation type="tool">search engine</annotation></phrase> <phrase><annotation type="tool" specifically="search engine">Search engines</annotation></phrase> <phrase><annotation type="tool">SPFE</annotation></phrase> <phrase><annotation type="tool">SPFE Open Tool Kit</annotation></phrase> <phrase><annotation type="tool">Sphinx</annotation></phrase> <phrase><annotation type="tool" specifically="static site generator">static site generators</annotation></phrase> <phrase><annotation type="tool">structured editor</annotation></phrase> <phrase><annotation type="tool">tool chains</annotation></phrase> <phrase><annotation type="tool">tool chain</annotation></phrase> <phrase><annotation type="tool">typesetting languages</annotation></phrase> <phrase><annotation type="tool">version control system</annotation></phrase> <phrase><annotation type="tool">validator</annotation></phrase> <phrase><annotation type="tool">widgets</annotation></phrase> <phrase><annotation type="tool">wiki</annotation></phrase> <phrase><annotation type="tool" specifically="Microsoft Word">Word</annotation></phrase> <phrase><annotation type="tool">WordPerfect</annotation></phrase> <phrase><annotation type="tool">XML databases</annotation></phrase> <phrase><annotation type="tool">XML database</annotation></phrase> <phrase><annotation type="tool" specifically="XML editor">XML editors</annotation></phrase> <phrase><annotation type="tool">XML editor</annotation></phrase> <phrase><annotation type="tool" specifically="wiki">wikis</annotation></phrase> <phrase><annotation type="tool" specifically="wiki">Wikis</annotation></phrase> <phrase><annotation type="tool" specifically="word processor">Word processors</annotation></phrase> <phrase><annotation type="tool">word processor</annotation></phrase></p>
<p>Roles</p>
<p><phrase><annotation type="role">information architect</annotation></phrase> <phrase><annotation type="role">content engineer</annotation></phrase> <phrase><annotation type="role" specifically="content engineer">content engineers</annotation></phrase> <phrase><annotation type="role">content strategist</annotation></phrase> <phrase><annotation type="role" specifically="content strategist">content strategists</annotation></phrase> <phrase><annotation type="role">document designer</annotation></phrase> <phrase><annotation type="role" specifically="document designer">document designers</annotation></phrase> <phrase><annotation type="role">information architect</annotation></phrase> <phrase><annotation type="role" specifically="information architect">information architects</annotation></phrase> <phrase><annotation type="role">prepress operator</annotation></phrase> <phrase><annotation type="role">publication designer</annotation></phrase> <phrase><annotation type="role" specifically="publication designer">publication designers</annotation></phrase> <phrase><annotation type="role" specifically="subject matter expert">subject matter experts</annotation></phrase> <phrase><annotation type="role" specifically="terminologist">terminologists</annotation></phrase> <phrase><annotation type="role">terminologist</annotation></phrase> <phrase><annotation type="role">typesetter</annotation></phrase> <phrase><annotation type="role">webmaster</annotation></phrase></p>
<p>Companies</p>
<p><phrase><annotation type="company">Amazon</annotation></phrase> <phrase><annotation type="company">Narrative Science</annotation></phrase></p>
<p>People <phrase><annotation type="person">Donald Knuth</annotation></phrase> <phrase><annotation type="person">Gutenberg</annotation></phrase> <phrase><annotation type="person">Henry Ford</annotation></phrase> <phrase><annotation type="person">John Gruber</annotation></phrase></p>
<p>Structures <phrase><annotation type="structure">cals table model</annotation></phrase> <phrase><annotation type="structure">cross references</annotation></phrase> <phrase><annotation type="structure">fragment</annotation></phrase> <phrase><annotation type="structure">ids</annotation></phrase> <phrase><annotation type="structure">id</annotation></phrase> <phrase><annotation type="structure">index</annotation></phrase> <phrase><annotation type="structure">keys</annotation></phrase> <phrase><annotation type="structure">key</annotation></phrase> <phrase><annotation type="structure">links</annotation></phrase> <phrase><annotation type="structure">list</annotation></phrase> <phrase><annotation type="structure">map</annotation></phrase> <phrase><annotation type="structure">microformats</annotation></phrase> <phrase><annotation type="structure" specifically="rhetorical block">rhetorical blocks</annotation></phrase> <phrase><annotation type="structure">rhetorical block</annotation></phrase> <phrase><annotation type="structure">rhetorical pattern</annotation></phrase> <phrase><annotation type="structure">semantic blocks</annotation></phrase> <phrase><annotation type="structure">semantic block</annotation></phrase> <phrase><annotation type="structure">subject annotations</annotation></phrase> <phrase><annotation type="structure">subject annotation</annotation></phrase> <phrase><annotation type="structure">table of contents</annotation></phrase> <phrase><annotation type="structure" specifically="table of contents">tables of contents</annotation></phrase> <phrase><annotation type="structure" specifically="table of contents">TOC</annotation></phrase> <phrase><annotation type="structure" specifically="table">tables</annotation></phrase> <phrase><annotation type="structure">table</annotation></phrase> <phrase><annotation type="structure" specifically="topic">topics</annotation></phrase> <phrase><annotation type="structure">topic</annotation></phrase></p>
<p>Standards (see also entries under languages, some of which are standards) <phrase><annotation type="standard">iso 1806</annotation></phrase> <phrase><annotation type="standard">s1000d</annotation></phrase></p>
<p>Media</p>
<p><phrase><annotation type="media">books</annotation></phrase> <phrase><annotation type="media">CD-ROM</annotation></phrase> <phrase><annotation type="media">ebooks</annotation></phrase> <phrase><annotation type="media">paper</annotation></phrase> <phrase><annotation type="media">hypertext</annotation></phrase> <phrase><annotation type="media">Interactive Electronic Technical Manuals</annotation></phrase> <phrase><annotation type="media">internet</annotation></phrase> <phrase><annotation type="media">online media</annotation></phrase> <phrase><annotation type="media">pdf</annotation></phrase> <phrase><annotation type="media">tablet</annotation></phrase> <phrase><annotation type="media">Web</annotation></phrase> <phrase><annotation type="media">web pages</annotation></phrase></p>
</annotations>
<p>There are only six reasons for an organization to create content:</p>
<ul>
<li>
<p>To meet regulatory requirements</p>
</li>
<li>
<p>To ensure the correct performance of internal processes</p>
</li>
<li>
<p>To generate leads and support the sales process</p>
</li>
<li>
<p>To lobby governments and affect social and political trends</p>
</li>
<li>
<p>To improve customer retention through post-sales support</p>
</li>
<li>
<p>To deliver content as a product in its own right</p>
</li>
</ul>
<p>Each of these goes straight to the bottom line of revenue and profitability, and each depends directly on the quality of content. To create a content process with any goal in mind other than to maximize content quality is foolish, shortsighted, and almost certainly guaranteed to have negative effects on revenue and profitability even if it reduces costs in a particular division.</p>
<p>Rhetoric is the way in which content works to meet its goals. Each of the content goals outlined above requires a specific approach to rhetoric to make sure it does the job it is supposed to do. At the same time, like any business function, the creation of content needs to be done efficiently, and it needs to meet its deadlines. To achieve your business goals, you need great rhetoric and efficient processes.</p>
<section>
<title>Rhetoric</title>

<p>Aristotle defined rhetoric as “the faculty of observing in any given case the available means of persuasion.” To put it another way, rhetoric is figuring out what to say and how to say it to persuade, inform, entertain, or enable the reader to act.</p>
<p>The word rhetoric is sometimes used dismissively, to describe content that is hollow or empty of meaning: “mere rhetoric.” And content can use rhetorical tricks yet entirely lack substance. However, if there can be mere rhetoric there can also be substantive rhetoric, and if you want to communicate your substance effectively, you need sound rhetoric. Rhetoric without substance lacks value. Substance without rhetoric hides value. Substance plus rhetoric unlocks value.</p>
<p>Rhetoric takes many forms. In some cases it is a matter of choosing the right metaphor to communicate a particular point, or the right word to trigger an emotional reaction. But there are more mundane aspects to rhetoric, such as making sure you give the right information, use the right terms, and organize and label content so that people find what they need. These aspects are just as essential as persuading, informing, entertaining, or enabling the reader to act. They are just as much part of rhetoric as <phrase><annotation type="italic">le mot juste</annotation></phrase> or the striking metaphor.</p>
<p>These more mundane aspects of rhetoric are often quite structured, which means that they are more or less repeatable. If something is structured, it conforms to some shape or set of rules that we can observe, define, and reproduce independent of the particular instance. This means that we can create multiple instances of those things that all conform to the same structure.</p>
<p>A house is made of a particular set of bricks, but the bricks are put together according to an architectural plan. You can create a new house next door using the same architectural plan but different bricks. A recipe is made of particular words, but those words are organized according to a rhetorical plan. You can create a new recipe on the next page using the same rhetorical plan but different words, describing a different dish. Structured writing, in the purely rhetorical sense of the word, means capturing, defining, and implementing repeatable rhetorical structures.</p>
</section>
<section>
<title>Process</title>

<p>This ability to repeat structure is at the heart of process in any field. A process finds and defines the most efficient way to do something, which is pointless unless you plan to do the same thing more than once. Writing down how to do something you never plan to do again would serve no purpose.</p>
<p>Process is all about repetition. A process that aims to produce rhetoric is fundamentally concerned with the repeatability of rhetoric. Thus process and rhetoric are intimately combined in the production of content. Structured writing holds the key to repeatability in rhetoric and process.</p>
<p>Too often, however, structured writing systems and implementations focus on process issues alone, leaving rhetoric to take care of itself. There are three problems with this approach:</p>
<ul>
<li>
<p>Creating effective rhetoric is a complex task requiring the whole of the writer’s attention. Yet many tools designed to support process goals such as <phrase><annotation type="algorithm">publishing</annotation></phrase> and <phrase><annotation type="algorithm">reuse</annotation></phrase> introduce complex tasks and concepts that pull attention away from the rhetoric that ought to be a writer’s chief concern. This book shows how you can remove most of these distractions from writers.</p>
</li>
<li>
<p>Some of the structures and processes enforced to meet process goals can be harmful to rhetoric. Although they may make the process more efficient, they can prevent writers from producing the best rhetoric, thereby reducing the quality and effectiveness of content. Fortunately, as this book shows, there are structured writing techniques that can achieve most of the same process goals without harming rhetoric and often improving it. In many cases they also improve the process as well.</p>
</li>
<li>
<p>There are large deficits in rhetoric in many existing content sets because producing first-class, thorough, consistent rhetoric is a difficult task in its own right. (The principal cause of this is the <phrase><annotation type="concept">curse of knowledge</annotation></phrase>, a concept I explore in <citation nameref="chapter.writing"/>.) This book shows how you can use structured writing techniques to address the challenge of creating consistently good rhetoric.</p>
</li>
</ul>
<p>Process and rhetoric, therefore, should never be treated independently. The whole purpose of the content process is to produce good rhetoric. It is, if you like, a rhetorical process. Process and rhetoric are intimately connected; you cannot hope to successfully treat one while ignoring the other.</p>
<p>This cuts both ways, of course. The things you do to support rhetoric must also be compatible with or contribute to efficient process. An approach to rhetoric that brings your production schedule to a halt does no one any good. Indeed, timeliness has become a key attribute of good rhetoric. Readers expect information to be up to date and available whenever they need it. If your process cannot produce good rhetoric in a timely manner, it cannot produce good rhetoric at all.</p>
</section>
<section>
<title>Complexity</title>

<p>The chief impediment to a process producing good rhetoric is complexity. Creating content is a complex business. There are rhetorical issues:</p>
<ul>
<li>
<p>You have to research your subject matter and your audience.</p>
</li>
<li>
<p>You have to figure out what to say and how to say it to persuade, inform, entertain, or enable your reader to act.</p>
</li>
</ul>
<p>And there are process issues:</p>
<ul>
<li>
<p>You have to record your content, manage it, and publish it, potentially to many different audiences and many different media.</p>
</li>
<li>
<p>If your organization creates a lot of content, you have to coordinate with everyone else creating content and make sure it all works together and serves the organization’s goals.</p>
</li>
<li>
<p>As your subject matter and business needs change, you need to figure out how your content needs to change and implement those changes cleanly and efficiently.</p>
</li>
<li>
<p>You have to create good consistent letter shapes with your pen.</p>
</li>
</ul>
<p>Okay, we haven’t had to deal with that last one for a while now. But something has to create letter shapes, line them up nicely, and fit them within the margins. Before we had machines to do it for us, that task was part of the writer’s life and an essential skill if you wanted to create a readable document. And if you wanted more than one copy, you had to write out each copy by hand or hire copyists to do it for you.</p>
<p>Fortunately, <phrase><annotation type="person">Gutenberg</annotation></phrase> invented a machine that took that burden off the writer’s hands. The printing press allowed people who were not trained in calligraphy to become writers. It also put a lot of copyists out of business. (Yes, the loss of white-collar jobs to automation is not a new thing.) But it also made books much cheaper, revolutionizing civilization and creating many more white-collar jobs.</p>
<p>Forming letter shapes and making copies is part of the content creation process. As long as writers had to perform these tasks, they needed a particular set of skills and a great deal of time in order to create a new work. Following the introduction of the printing press many more new works were created. These basic process improvements had a profound impact on rhetoric, freeing time and energy to create new rhetoric.</p>
</section>
<section>
<title>Partitioning complexity</title>

<p>Process improvement of this kind can be described as a partitioning of a task or process. The printing press partitioned the task of physical book making from the task of language composition, thus freeing writers to spend more time and energy writing.</p>
<p>Of course, the writer’s handwriting still had to be good enough for the printer to read. But then came the typewriter, the computer keyboard, and the touch screen with predictive typing, and now many children are not even taught cursive writing in school. Lament the withering of handwriting skills if you like, but it represents a new partitioning of the writing process, one in which manipulating a pen and shaping letters has been entirely partitioned from the writer.</p>
<p>Of course, this introduces a new skill for writers to master: typing. When a task is partitioned, there is always a new skill to learn. Partitioning a task creates the need to transmit information from one partition to another. Typewriters (or, today, the computer and monitor) take over the task of forming letters on paper or screen, but they need to know which letters the writer wants. The writer tells them by tapping keys on the keyboard. The keys are the interface between the partitions of the writing system. Using new interfaces is part of adapting to the newly partitioned system.</p>
<p>Structured writing enables you to partition the content production process by capturing information that must be passed from one part of your process to another. For instance, you can partition the creation of a list from the formatting of a list by using list markup (such as <phrase><annotation type="markup-language"><annotation type="standard">HTML</annotation></annotation></phrase> <code>&lt;ol&gt;</code> and <code>&lt;li&gt;</code> tags) and a separate formatting language (such as <phrase><annotation type="programming-language" specifically="cascading style sheets">CSS</annotation></phrase>) to specify how list are formatted. The markup language serves as an interface between the writing partition and the formatting partition, ensuring that the required information – this is a list, this is a list item – gets passed from one partition to another.</p>
<p>By partitioning the process in the right way, we can separate tasks that require complex skills and knowledge among different workers, allowing each to develop and practice their individual expertise while ensuring the all the pieces come together at the end in a reliable and efficient manner.</p>
<p>Every content organization partitions and distributes content creation. Newspapers do not make reporters drive delivery trucks. Publishing houses do not let authors design book covers (much as they might want to). Wise organizations partition the job of editing and proofreading content from the job of writing it. When they need to deliver a large body of content to the Web, organizations employ <phrase><annotation type="role" specifically="information architect">information architects</annotation></phrase> and <phrase><annotation type="role" specifically="content strategist">content strategists</annotation></phrase>. All of these are examples of partitioning the complexity of the content process to improve quality and efficiency. Partitioning a modern content process is complex, often involving multiple partitions with multiple complex interfaces.</p>
<p>There are two potential benefits to partitioning the content process. First, it can make the writer’s job easier, meaning that more people can write, and writers can focus more attention on subject matter and rhetoric and less on the tools. Second, you can improve efficiency by assigning partitioned tasks to people or processes better equipped to handle them. A typewriter or a computer makes much more consistent letter shapes than a human hand. The printing press makes identical copies much faster than a human copyist.</p>
<pullquote>
<p>You can’t reduce the fundamental complexity of content creation.</p>
</pullquote>
<p>You can’t reduce the fundamental complexity of content creation. All that stuff has to get done, and it is all difficult in one way or another. Different tasks require different skills and knowledge. Rhetoric alone – figuring out what to say and how best to say it – is a complex task that deserves the writer’s whole attention. You cannot eliminate the complexity of everything that goes on around the writing task, but you can make sure that it is partitioned and directed to people or processes that are best equipped to deal with it.</p>
</section>
<section>
<title>The complex relationship of process and rhetoric</title>

<p>Process and rhetoric are intimately connected. Above, I divided the complexity of content creation into rhetorical complexity and process complexity. But look again and we see that rhetorical issues pervade the process issues.</p>
<ul>
<li>
<p>You have to record the content, manage it, and publish it, potentially to many different audiences and many different media. But when you manage content and distribute it to different audiences, what are you doing but ensuring that you are delivering the right rhetoric? <phrase><annotation type="italic">Content management</annotation></phrase> is the management of rhetoric.</p>
</li>
<li>
<p>If your organization creates a lot of content, you have to coordinate with everyone else creating content and make sure it all works together and serves the organization’s goals. And what makes content work together? It must conform to the same rhetorical rules and goals. <phrase><annotation type="italic">Content strategy</annotation></phrase> is the strategy of rhetoric.</p>
</li>
<li>
<p>As your subject matter and business needs change, you need to figure out how your content needs to change and implement those changes cleanly and efficiently. And when you determine which changes are needed and how to make them, what are you managing and changing but rhetoric? The <phrase><annotation type="italic">content process</annotation></phrase> is the process of creating, managing, and delivering rhetoric.</p>
</li>
</ul>
<p>What happens if you don’t manage the inherent complexity of content creation properly? Complexity cannot be destroyed. It has to go somewhere. If your content lacks needed information, the burden of finding that information falls on your readers. If your readers can’t understand the terms used, read the font chosen, learn about an unfamiliar concept, get information when they need it, or tell current information from outdated, that is a failure of rhetoric.</p>
<p>Another name for the failure of rhetoric is poor content quality. Poor content quality is the direct result of the complexity of content creation not being handled properly within the content producing organization. The only product of the content process is rhetoric. All content problems are rhetoric problems and all rhetoric problems are the result of process problems. To consistently create good rhetoric, you must ensure that every piece of the inherent complexity of content creation is directed to a competent and adequately resourced person or process.</p>
<p>The relationship between complexity and quality has never been better understood or more important. Some of the defining technology of our age is mind-bogglingly complex, but the most successful products – those with the highest quality and value – partition that complexity successfully, creating simple interfaces not only for consumers but also for those who design and build those products. Without a sophisticated partitioning of complexity throughout the supply chain and the design and manufacturing process, many modern products would be impossible to bring to market.</p>
<p>But in many organizations, the current tools and processes fail to assign each part of the complexity of content creation to the person or process with the best combination of knowledge, skills and resources to handle it. The result is poor content quality, inefficient processes, and reduced revenue and profitability. The cure is to adopt a partitioning that better handles the complexity the organization is experiencing. Structured writing is a tool for implementing that cure. Note that structured writing is not the cure itself. It is a tool for implementing the cure. The cure is the correct distribution of complexity in your organization.</p>
</section>
<section>
<title>Complexity is complex</title>

<p>Managing complexity in your content process is complex. There is no magic elixir that will make the complexity of your content processes disappear, and adopting this year’s gotta-have-it content technology will not magically put all your complexity into the right buckets.</p>
<p>Structured writing is itself a complex technique and some of the most popular structured writing methods of the day are highly complex. That is not necessarily a bad thing. The aim is not to eliminate complexity altogether – that is impossible – but to partition it so that each part of that complexity is handled by the person or process with the knowledge, skills, and resources to handle it. More complex tools are fine if they help you achieve a better partitioning of complexity. But we can’t ignore the complexity that these tools and techniques bring, nor the way that an improper choice of tools or techniques can end up dumping additional complexity on writers or other people in your content system.</p>
<p>The aim of this book is to help you achieve a better partitioning of the complexity of your content system in order to improve your rhetoric and make your process more efficient and reliable. You cannot accomplish this without understanding the difficulties that come with specific structured writing techniques and tools.</p>
<p>Whenever I talk about techniques for supporting process, I will warn about any pitfalls those techniques hold for rhetoric. Whenever I talk about techniques for supporting rhetoric, I will warn about any pitfalls those techniques hold for process. Part of this involves examining methods I don’t recommend or recommend only in selective cases. Because some of these techniques are widely used, I think it is important to point out their pitfalls, if only to answer the question of why you should choose the alternate techniques that I recommend.</p>
<p>This may appear to give this book a split personality: part survey, part advocacy for a set of techniques that I think should be more widely used. But the truth is, almost all of the techniques described in this book are appropriate in some situations. Some are overused, and I will critique their use. Some are under used, and I will advocate their use. But my aim is to move toward balance, not to tilt the scale so much the other way that people are again using techniques and tools that do not fit their needs, circumstances, and resources.</p>
<p>The optimal partitioning of complexity for your organization is unique to your organization (and may well change over time). The aim of this book is to show you how you can use structured writing techniques to develop the partitioning that is optimal for your organization, not to recommend one form or partitioning over another.</p>
</section>
<section>
<title>How this book is organized</title>

<p>This book is organized into seven parts, as follows:</p>
<ll>
<li>
<label>Structured Writing Domains</label>

<p>Describes the four main ways you can apply formal structure to content, what I call the four domains of structured writing: the <phrase><annotation type="concept" specifically="media domain">media</annotation></phrase>, <phrase><annotation type="concept" specifically="document domain">document</annotation></phrase>, <phrase><annotation type="concept" specifically="subject domain">subject</annotation></phrase>, and <phrase><annotation type="concept" specifically="management domain">management domains</annotation></phrase>. This lays the foundation for discussing how structure is used to partition complexity through the remaining sections of the book.</p>
</li>
<li>
<label>Process, Rhetoric, and Structure</label>

<p>Describes how rhetoric can be represented in structured writing and how this affects the partitioning of the content system. It then looks at how to represent rhetorical structure at the level of both the individual document and the information set as a whole and how authors can adapt to working with rhetorical structures in structured writing.</p>
</li>
<li>
<label>Algorithms</label>

<p>Describes the main content processing algorithms used in structured writing, how they affect the partitioning of the content system, and how they work in each of the structured writing domains.</p>
</li>
<li>
<label>Structures</label>

<p>Describes the structures used in structured writing in more detail and looks at how structural issues are handled at every scale from full documents to individual phrases.</p>
</li>
<li>
<label>Languages</label>

<p>Describes the various markup languages (and alternative technologies) used to capture and express content structure, including an overview of some of the major public markup systems, such as <phrase><annotation type="markup-language">Markdown</annotation></phrase>, <phrase><annotation type="markup-language"><annotation type="standard">DocBook</annotation></annotation></phrase>, and <phrase><annotation type="markup-language"><annotation type="standard">DITA</annotation></annotation></phrase>.</p>
</li>
<li>
<label>Management</label>

<p>Describes how structured writing fits into the larger picture of managing the overall content process and shows how structured writing can enable some important management functions that are difficult or impossible to implement efficiently with less structured content.</p>
</li>
<li>
<label>Design</label>

<p>Describes an approach for designing the right content partitioning for your content process and selecting the right tools and technologies to implement it.</p>
</li>
</ll>
</section>
</chapter>
